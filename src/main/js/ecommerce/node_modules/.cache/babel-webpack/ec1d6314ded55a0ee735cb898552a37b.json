{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Various utilities for working with {@link ./command.Executor}\n * implementations.\n */\n'use strict';\n\nvar HttpClient = require('./http').HttpClient,\n    HttpExecutor = require('./http').Executor,\n    DeferredExecutor = require('./lib/command').DeferredExecutor,\n    promise = require('./lib/promise'); // PUBLIC API\n\n/** @deprecated Use {@link ./lib/command.DeferredExecutor} instead. */\n\n\nexports.DeferredExecutor = DeferredExecutor;\n/**\n * Creates a command executor that uses WebDriver's JSON wire protocol.\n * @param {(string|!promise.Promise<string>)} url The server's URL,\n *     or a promise that will resolve to that URL.\n * @param {?string=} opt_proxy (optional) The URL of the HTTP proxy for the\n *     client to use.\n * @returns {!./lib/command.Executor} The new command executor.\n */\n\nexports.createExecutor = function (url, opt_proxy) {\n  return new DeferredExecutor(promise.when(url, function (url) {\n    var client = new HttpClient(url, null, opt_proxy);\n    return new HttpExecutor(client);\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}